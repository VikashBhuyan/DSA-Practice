Valid Palindrome :
Brute force:
class Solution {
    public boolean isPalindrome(String s) {
        s = s.toLowerCase();
        // System.out.println(s);
        if(s.length()==1)
        {
            return true;
        }
        int i=0,j=s.length()-1;
        // System.out.println(s.length());
        while(i<j)
        {
            
            if(!Character.isAlphabetic(s.charAt(i))){
                i++;
            }
            else if(!Character.isAlphabetic(s.charAt(j))){
                j--;
            }
            else if(s.charAt(i)!=s.charAt(j))
            {
                return false;
            }
            else{
                // System.out.println(s.charAt(i)+" "+s.charAt(j));
            i++;
            j--;
            }
        }
        return true;
    }
}
Optimum :(2 pointers)
remove space,comma from it. Then take two pointers from front and end;
class Solution {
    public boolean isPalindrome(String s) {
        s = s.toLowerCase();
        // System.out.println(s);
        StringBuilder b = new StringBuilder();
        for(int i=0;i<s.length();i++){
            if(Character.isLetter(s.charAt(i)) || Character.isDigit(s.charAt(i))){
                b.append(s.charAt(i));
            }
        }
        int n = b.length()-1;
        for(int i=0;i<b.length()/2;i++){
            if(b.charAt(i)!= b.charAt(n-i))
            {
                return false;
            }
        }
        return true;
    }
}